  gcloud compute target-pools create www-pool \
    --region us-central1 --http-health-check basic-check

gcloud compute target-pools add-instances web-map-http --region us-central1 \
    --instances flask-app-001,flask-app-002,flask-app-003


maquina 1

export $FLASK_PORT_003="http://34.122.105.39:80"

maquina 2

export $FLASK_PORT_003="http://35.239.23.17:80"

maquina 3 

export URL_BALANCEADOR_DE_CARGA="http://34.149.162.233:80"
export URL_BALANCEADOR_DE_CARGA="http://34.149.162.233:80"



34.149.162.233:80

us-central1





gcloud compute forwarding-rules create www-rule \
    --region us-central1  \
    --ports 80 \
    --address network-lb-ip-1 \
    --target-pool www-pool

gcloud compute forwarding-rules describe www-rule --region us-central1

IPADDRESS=$(gcloud compute forwarding-rules describe www-rule --region us-central1  --format="json" | jq -r .IPAddress)

gcloud compute forwarding-rules describe www-rule --region us-central1

   gcloud compute addresses create network-lb-ip-1 \
    --region  us-central1

gcloud compute forwarding-rules describe www-rule --region us-central1



gcloud compute instance-templates create lb-backend-template \
   --region=us-central1 \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --machine-type=e2-medium \
   --image-family=debian-11 \
   --image-project=debian-cloud \
   --metadata=startup-script='#!/bin/bash
     apt-get update
     apt-get install apache2 -y
     a2ensite default-ssl
     a2enmod ssl
     vm_hostname="$(curl -H "Metadata-Flavor:Google" \
     http://169.254.169.254/computeMetadata/v1/instance/name)"
     echo "Page served from: $vm_hostname" | \
     tee /var/www/html/index.html
     systemctl restart apache2'

gcloud compute instance-groups managed create lb-backend-group \
   --template=lb-backend-template --size=2 --zone=us-central1-a --service-account=admin-seguro@proyecto-software-en-la-nube.iam.gserviceaccount.com
     

gcloud compute instance-groups managed create GROUP-NAME \
--size SIZE \
--template TEMPLATE \
--base-instance-name INSTANCE-NAME \
--zone ZONE \
--service-account SERVICE-ACCOUNT-EMAIL



gcloud compute instance-templates create lb-backend-template \
   --region=us-central1 \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --machine-type=e2-medium \
   --image-family=debian-11 \
   --image-project=debian-cloud \
   --metadata=startup-script='#!/bin/bash
   --service-account=admin-seguro@proyecto-software-en-la-nube.iam.gserviceaccount.com
     apt-get update
     apt-get install apache2 -y
     a2ensite default-ssl
     a2enmod ssl
     vm_hostname="$(curl -H "Metadata-Flavor:Google" \
     http://169.254.169.254/computeMetadata/v1/instance/name)"
     echo "Page served from: $vm_hostname" | \
     tee /var/www/html/index.html
     systemctl restart apache2'



gcloud compute backend-services add-backend web-backend-service \
  --instance-group=instance-group-1 \
  --instance-group-zone=us-central1-a \
  --global

  gcloud compute target-pools create www-pool \
    --region  --http-health-check basic-check


gcloud compute target-pools add-instances web-map-http \
    --instances flask-app-001,flask-app-002,flask-app-003

  gcloud compute target-pools create web-map-http \
    --region us-central1 --http-health-check basic-check

 gcloud compute target-pools add-instances web-map-http \
    --instances flask-app-001,flask-app-002,flask-app-003 \
    --instances-zone=us-central1-a

gcloud compute backend-services add-backend web-backend-service \
  --instance-group=instance-group-1 \
  --instance-group-zone=us-central1-a \
  --global


gcloud compute target-pools remove-instances web-map-http --instances flask-app-003 --instances-zone=us-central1-a

gcloud compute url-maps create web-map-http \
    --default-service web-backend-service --instances-zone=us-central1-a




gcloud compute instance-groups managed set-target-pools instance-group-1 \
    --target-pools web-map-http \
    --region us-central1




flask-app-001,flask-app-002,flask-app-003



gcloud compute backend-services create web-backend-service \
  --protocol=HTTP \
  --port-name=http \
  --health-checks=http-basic-check \
  --global




gcloud compute target-pools add-instances web-map-http --instances=flask-app-001,flask-app-002,flask-app-003 --region=us-central1



gcloud compute instance-groups managed set-instances instance-group-1 \
    --zone=us-central1-a \
    --instances=flask-app-001,flask-app-002,flask-app-003


gcloud compute instance-groups managed modify-instances instance-group-1 \
--add-instances flask-app-001,flask-app-002,flask-app-003


gcloud compute instance-groups managed create lb-backend-group \
   --template=lb-backend-template --size=2 --zone=us-central1-a 



gcloud compute instance-templates create lb-backend-template2 \
--service-account=id-429092349424-compute@proyecto-software-en-la-nube.iam.gserviceaccount.com \
   --region=us-central1 \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --machine-type=e2-medium \
   --image-family=debian-11 \
   --image-project=debian-cloud \
   --metadata=startup-script='#!/bin/bash
     apt-get update
     apt-get install apache2 -y
     a2ensite default-ssl
     a2enmod ssl
     vm_hostname="$(curl -H "Metadata-Flavor:Google" \
     http://169.254.169.254/computeMetadata/v1/instance/name)"
     echo "Page served from: $vm_hostname" | \
     tee /var/www/html/index.html
     systemctl restart apache2'


gcloud compute instance-groups managed create lb-backend-group2 \
   --template=lb-backend-template2 --size=2 --zone=us-central1-a 



gcloud compute firewall-rules create fw-allow-health-check \
  --network=default \
  --action=allow \
  --direction=ingress \
  --source-ranges=130.211.0.0/22,35.191.0.0/16 \
  --target-tags=allow-health-check \
  --rules=tcp:80

gcloud compute backend-services create web-backend-service \
  --protocol=HTTP \
  --port-name=http \
  --health-checks=http-basic-check \
  --global


nohup flask run --port 80 --host 0.0.0.0   & 


/home/juliethquinchia/SoftwareNube/conversion_api:app
/home/juliethquinchia/SoftwareNube/conversion_api

exec gunicorn --bind 0.0.0.0:80 --workers 3 --name app.py /home/juliethquinchia/SoftwareNube/conversion_api:app





[Unit]
Description=FlaskAPIService
After=network.target
[Service]
User=root
WorkingDirectory=/home/juliethquinchia/SoftwareNube/conversion_api
ExecStart=/home/juliethquinchia/SoftwareNube/conversion_api/venv/bin/gun>
Environment=FLASK_APP=/home/juliethquinchia/SoftwareNube/conversion_api/>
Environment=FLASK_ENV=production
Restart=always
[Install]
WantedBy=multi-user.target